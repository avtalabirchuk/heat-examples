heat_template_version: 2014-10-16
#

description: simple test server

parameters:
  network_id:
    type: string
    constraints:
      - custom_constraint: neutron.network
  image:
    type: string
    default: Ubuntu Xenial 16.04 (2020-04-04)
    constraints:
      - custom_constraint: glance.image
  ssh_keys:
    type: comma_delimited_list
    default: 
      - 'ssh-rsa AAAAB [...] QQRnnQ== user@host'

resources:
  allow_ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming SSH and ICMP traffic from anywhere.
      name: allow incoming traffic, tcp port 22 and icmp
      rules: 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 22, port_range_max: 22, protocol: tcp } 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, protocol: icmp } 

  allow_webtraffic:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming web traffic via http from anywhere. 
      name: allow incoming traffic, tcp port 80
      rules: 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 80, port_range_max: 80, protocol: tcp } 

  host:
    type: OS::Nova::Server
    properties:
      name: lampserver 
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }    
      image: { get_param: image }
      flavor: m1.tiny
      networks:
        - port: { get_resource: port }

  cloud-init-config:
   # cloud init resource
   type: OS::Heat::CloudConfig
   properties:
     cloud_config:
       manage_etc_hosts: true
       users:
         - name: syseleven
           gecos: SysEleven Stack user
           sudo: ALL=(ALL) NOPASSWD:ALL
           shell: /bin/bash
           ssh-authorized-keys: { get_param: ssh_keys }  
       runcmd:
         - /root/inject_userkey
         - /root/install_lampstack.sh
       packages:
         - curl
             
  port:
    type: OS::Neutron::Port
    depends_on: [ allow_ssh, allow_webtraffic ]
    properties:
      network: { get_param: network_id }
      security_groups: [ get_resource: allow_ssh, get_resource: allow_webtraffic ]

  floating_ip:
    type: OS::Neutron::FloatingIP
    depends_on: [ port ]
    properties:
      floating_network: ext-net
      port_id: { get_resource: port }
